package taoqz.top.创建型模式.工厂模式;

public class Readme {

    /**
     * 工厂模式（创建型模式）
     *      工厂模式又可以细分为：简单工厂模式、工厂方法、抽象工厂
     * 使用场景：
     *  当创建对象的逻辑比较复杂，可以考虑使用工厂模式，封装对象的创建过程，将对象的创建和使用相分离
     *      简单工厂：当每个对象的创建逻辑都比较简单的时候，推荐使用简单工厂模式，将多个对象的创建逻辑放到一个工厂类中
     *      工厂方法：当每个对象的创建逻辑比较复杂的时候（比如对象的创建要组合其他类对象，做各种初始化操作），推荐使用工厂方法模式，
     *                  将创建逻辑拆分的更细，每个对象的创建逻辑独立到各自的工厂类中
     *
     *  优点：
     *      隔离复杂度：封装复杂的创建逻辑，调用者无需了解如何创建对象
     *      封装变化：创建逻辑有可能变化，封装成工厂类之后，创建逻辑的变更对调用者来说更加清晰透明
     *      控制复杂度：将创建代码抽离出来，让原本的函数或类职责更单一，代码更简洁
     *
     *  再整个学习过程下来，我自身感觉简单工厂对我目前来说已经够用了，工厂方法感觉设计设计有点复杂，
     *  使用场景可能会因为理解不到位导致代码复杂或使用不得当
     */

}
